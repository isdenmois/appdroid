plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

Properties properties = new Properties()
properties.load(project.rootProject.file("local.properties").newDataInputStream())

android {
    compileSdk 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.isdenmois.appdroid"
        minSdk 28
        targetSdk 31
        versionCode 14
        versionName "2.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        resValue "string", "base_url", properties.get("release_url")
    }

    signingConfigs {
        release {
            assert properties['KEY_STORE_FILE'];
            storeFile file(properties['KEY_STORE_FILE'])
            storePassword properties['KEY_PASSWORD']
            keyAlias properties['KEY_ALIAS']
            keyPassword properties['KEY_PASSWORD']
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
}

dependencies {

    implementation AndroidX.core.ktx
    implementation AndroidX.compose.ui
    implementation AndroidX.compose.material
    implementation AndroidX.compose.ui.tooling
    implementation AndroidX.lifecycle.runtimeKtx
    implementation AndroidX.activity.compose
    implementation AndroidX.lifecycle.viewModelCompose

    testImplementation 'junit:junit:4.+'
    androidTestImplementation AndroidX.test.ext.junit
    androidTestImplementation AndroidX.test.espresso.core
    // Test rules and transitive dependencies:
    androidTestImplementation AndroidX.compose.ui.testJunit4
    // Needed for createComposeRule, but not createAndroidComposeRule:
    debugImplementation AndroidX.compose.ui.testManifest

    /** Hilt **/
    implementation Google.dagger.hilt.android
    kapt Google.dagger.hilt.compiler

    /** Retrofit with Moshi Converter **/
    implementation Square.retrofit2
    implementation Square.retrofit2.converter.moshi
    implementation Square.retrofit2.converter.scalars
    implementation Square.okHttp3.loggingInterceptor
    kapt Square.moshi.kotlinCodegen

    /** Moshi **/
    implementation Square.moshi
    implementation Square.moshi.kotlinReflect

    implementation KotlinX.coroutines.android
}

configurations {
    implementation {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    }
}
